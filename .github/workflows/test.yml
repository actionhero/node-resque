name: Test
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
      - name: save cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: download cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: download cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
      - run: npm rebuild
      - run: ./node_modules/.bin/jest --ci --forceExit
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

  complete:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - run: echo "Done!"
